{"ast":null,"code":"import axios from\"axios\";// Use environment variables with fallbacks\nconst API_URL=process.env.REACT_APP_API_URL||\"https://qr-frontend-4kwe.onrender.com/api\";const QR_BASE_URL=process.env.REACT_APP_BACKEND_URL||\"https://qr-frontend-4kwe.onrender.com\";console.log(\"🔧 Environment Configuration:\");console.log(\"- API URL:\",API_URL);console.log(\"- Backend URL:\",QR_BASE_URL);// Create axios instance with configuration from env\nconst apiClient=axios.create({baseURL:\"\".concat(API_URL,\"/qr\"),timeout:parseInt(process.env.REACT_APP_REQUEST_TIMEOUT)||10000});// Request interceptor\napiClient.interceptors.request.use(config=>{var _config$method;console.log(\"\\uD83D\\uDE80 \".concat((_config$method=config.method)===null||_config$method===void 0?void 0:_config$method.toUpperCase(),\" \").concat(config.url));return config;},error=>{console.error(\"❌ Request error:\",error);return Promise.reject(error);});// Response interceptor\napiClient.interceptors.response.use(response=>{console.log(\"\\u2705 \".concat(response.status,\" \").concat(response.config.url));return response;},error=>{var _error$response,_error$config,_error$response2,_error$response3;console.error(\"❌ API Error:\",{message:error.message,status:(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status,url:(_error$config=error.config)===null||_error$config===void 0?void 0:_error$config.url});if(error.code==='ECONNABORTED'){throw new Error(\"Request timeout - please check your connection\");}if(((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===404){throw new Error(\"Service unavailable - please try again later\");}if(((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.status)>=500){throw new Error(\"Server error - please try again later\");}throw error;});export const generateQR=async()=>{try{const response=await apiClient.get(\"/generate\");return response.data;}catch(error){console.error(\"QR Generation Error:\",error.message);throw new Error(\"Failed to generate QR code: \".concat(error.message));}};export const checkQRStatus=async sessionId=>{if(!sessionId){throw new Error(\"Session ID is required\");}try{const response=await apiClient.get(\"/status?sessionId=\".concat(sessionId));return response.data;}catch(error){console.error(\"QR Status Check Error:\",error.message);throw new Error(\"Failed to check QR status: \".concat(error.message));}};export const confirmQR=async(token,sessionId)=>{if(!token||!sessionId){throw new Error(\"Token and Session ID are required\");}try{const response=await apiClient.post(\"/confirm\",{sessionId},{headers:{Authorization:\"Bearer \".concat(token)}});return response.data;}catch(error){console.error(\"QR Confirmation Error:\",error.message);throw new Error(\"Failed to confirm QR login: \".concat(error.message));}};// Get configuration from environment\nexport const getConfig=()=>({backendUrl:process.env.REACT_APP_BACKEND_URL,frontendUrl:process.env.REACT_APP_FRONTEND_URL,qrAuthPage:process.env.REACT_APP_QR_AUTH_PAGE,pollingInterval:parseInt(process.env.REACT_APP_QR_POLLING_INTERVAL)||3000,maxPolls:parseInt(process.env.REACT_APP_QR_MAX_POLLS)||100,appName:process.env.REACT_APP_APP_NAME||'QR Auth'});","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","QR_BASE_URL","REACT_APP_BACKEND_URL","console","log","apiClient","create","baseURL","concat","timeout","parseInt","REACT_APP_REQUEST_TIMEOUT","interceptors","request","use","config","_config$method","method","toUpperCase","url","error","Promise","reject","response","status","_error$response","_error$config","_error$response2","_error$response3","message","code","Error","generateQR","get","data","checkQRStatus","sessionId","confirmQR","token","post","headers","Authorization","getConfig","backendUrl","frontendUrl","REACT_APP_FRONTEND_URL","qrAuthPage","REACT_APP_QR_AUTH_PAGE","pollingInterval","REACT_APP_QR_POLLING_INTERVAL","maxPolls","REACT_APP_QR_MAX_POLLS","appName","REACT_APP_APP_NAME"],"sources":["Z:/ProF/qr_auth/src/services/qrService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Use environment variables with fallbacks\r\nconst API_URL = process.env.REACT_APP_API_URL || \"https://qr-frontend-4kwe.onrender.com/api\";\r\nconst QR_BASE_URL = process.env.REACT_APP_BACKEND_URL || \"https://qr-frontend-4kwe.onrender.com\";\r\n\r\nconsole.log(\"🔧 Environment Configuration:\");\r\nconsole.log(\"- API URL:\", API_URL);\r\nconsole.log(\"- Backend URL:\", QR_BASE_URL);\r\n\r\n// Create axios instance with configuration from env\r\nconst apiClient = axios.create({\r\n  baseURL: `${API_URL}/qr`,\r\n  timeout: parseInt(process.env.REACT_APP_REQUEST_TIMEOUT) || 10000,\r\n});\r\n\r\n// Request interceptor\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    console.log(`🚀 ${config.method?.toUpperCase()} ${config.url}`);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error(\"❌ Request error:\", error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor\r\napiClient.interceptors.response.use(\r\n  (response) => {\r\n    console.log(`✅ ${response.status} ${response.config.url}`);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error(\"❌ API Error:\", {\r\n      message: error.message,\r\n      status: error.response?.status,\r\n      url: error.config?.url\r\n    });\r\n    \r\n    if (error.code === 'ECONNABORTED') {\r\n      throw new Error(\"Request timeout - please check your connection\");\r\n    }\r\n    \r\n    if (error.response?.status === 404) {\r\n      throw new Error(\"Service unavailable - please try again later\");\r\n    }\r\n    \r\n    if (error.response?.status >= 500) {\r\n      throw new Error(\"Server error - please try again later\");\r\n    }\r\n    \r\n    throw error;\r\n  }\r\n);\r\n\r\nexport const generateQR = async () => {\r\n  try {\r\n    const response = await apiClient.get(\"/generate\");\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"QR Generation Error:\", error.message);\r\n    throw new Error(`Failed to generate QR code: ${error.message}`);\r\n  }\r\n};\r\n\r\nexport const checkQRStatus = async (sessionId) => {\r\n  if (!sessionId) {\r\n    throw new Error(\"Session ID is required\");\r\n  }\r\n  \r\n  try {\r\n    const response = await apiClient.get(`/status?sessionId=${sessionId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"QR Status Check Error:\", error.message);\r\n    throw new Error(`Failed to check QR status: ${error.message}`);\r\n  }\r\n};\r\n\r\nexport const confirmQR = async (token, sessionId) => {\r\n  if (!token || !sessionId) {\r\n    throw new Error(\"Token and Session ID are required\");\r\n  }\r\n  \r\n  try {\r\n    const response = await apiClient.post(\"/confirm\", \r\n      { sessionId },\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"QR Confirmation Error:\", error.message);\r\n    throw new Error(`Failed to confirm QR login: ${error.message}`);\r\n  }\r\n};\r\n\r\n// Get configuration from environment\r\nexport const getConfig = () => ({\r\n  backendUrl: process.env.REACT_APP_BACKEND_URL,\r\n  frontendUrl: process.env.REACT_APP_FRONTEND_URL,\r\n  qrAuthPage: process.env.REACT_APP_QR_AUTH_PAGE,\r\n  pollingInterval: parseInt(process.env.REACT_APP_QR_POLLING_INTERVAL) || 3000,\r\n  maxPolls: parseInt(process.env.REACT_APP_QR_MAX_POLLS) || 100,\r\n  appName: process.env.REACT_APP_APP_NAME || 'QR Auth'\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}